$('#masonry-container').prepend("<%=j render(:partial => 'poll_redis', :locals => {:media => @new_media})%>");
$('#masonry-container').masonry('reload');
pollRedis();

$(document).ajaxComplete(function(){
	$('.poll-redis').each(function(){
		$(this).removeClass('poll-redis');
		var playerId = $(this).attr('id');
	  	var player;
	  	player = new YT.Player(playerId, {
	    	events: {
				'onReady': createYTEvent(playerId),
				'onStateChange': onPlayerStateChange(playerId),
				'onError': onPlayerError
			}
	  	});
	});
	
	function createYTEvent(playerId){ 
		return function (event) {
			var parent_div = $('#'+playerId).parents('.yt_parent');	
			var player = event.target;
			parent_div.addClass('loading');
			player.setVolume(0);
			player.playVideo();
			parent_div.hover(function(){
				$('.selected').trigger('mouseout').removeClass('selected');
				player.seekTo(parent_div.data("start"), 'false');	
				player.playVideo();
				player.setVolume(50);	
			}, function(){
				player.pauseVideo();
			});
		}
	}
	
	function onPlayerError(event){
		event.target.pauseVideo();
	}

	function  onPlayerStateChange(playerId){
			return function (event) {
				var parent_div = $('#'+playerId).parents('.yt_parent');	
				var player = event.target
				if (event.data == YT.PlayerState.PLAYING && parent_div.hasClass('loading')){
					player.pauseVideo();
					parent_div.removeClass('loading');
				}
				else if (event.data == YT.PlayerState.PAUSED){
					parent_div.find('.overlay').fadeOut();	
				}	
		}
	}
	
});